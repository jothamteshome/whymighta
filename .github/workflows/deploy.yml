name: Deploy to EC2 via AWS SSM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        

    - name: Update SSM Parameters
      run: |
        aws ssm put-parameter --name "/whymighta/db/username" --value "${{ secrets.MYSQL_USERNAME }}" --type "String" --overwrite
        aws ssm put-parameter --name "/whymighta/db/password" --value "${{ secrets.MYSQL_PASSWORD }}" --type "SecureString" --overwrite
        aws ssm put-parameter --name "/whymighta/db/host" --value "${{ secrets.MYSQL_HOST }}" --type "String" --overwrite
        aws ssm put-parameter --name "/whymighta/db/port" --value "${{ secrets.MYSQL_PORT }}" --type "String" --overwrite
        aws ssm put-parameter --name "/whymighta/db/name" --value "${{ secrets.MYSQL_DATABASE }}" --type "String" --overwrite
        aws ssm put-parameter --name "/whymighta/encryption/key" --value "${{ secrets.ENCRYPTION_KEY }}" --type "SecureString" --overwrite
        aws ssm put-parameter --name "/whymighta/api/chatgpt/url" --value "${{ secrets.AWS_CHATGPT_API_URL }}" --type "String" --overwrite
        aws ssm put-parameter --name "/whymighta/api/chatgpt/key" --value "${{ secrets.AWS_CHATGPT_API_KEY }}" --type "SecureString" --overwrite
        aws ssm put-parameter --name "/whymighta/api/weather/key" --value "${{ secrets.WEATHER_API_KEY }}" --type "SecureString" --overwrite
        aws ssm put-parameter --name "/whymighta/discord/token" --value "${{ secrets.DISCORD_TOKEN }}" --type "SecureString" --overwrite


    - name: Kill all tmux sessions
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters '{"commands":["tmux kill-server 2>/dev/null || true"]}' \
          --comment "Kill old tmux sessions"


    - name: Pull latest code on EC2
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters '{"commands":["mkdir -p /home/ubuntu/whymighta && cd /home/ubuntu/whymighta && git checkout main && git pull origin main"]}' \
          --comment "Update code"


    - name: Install Python dependencies
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters '{"commands":["cd /home/ubuntu/whymighta && python3 -m venv .venv 2>/dev/null || true && .venv/bin/pip install -U -r requirements.txt"]}' \
          --comment "Install requirements"


    - name: Start tmux session and run bot script
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters '{"commands":["cd /home/ubuntu/whymighta && tmux new-session -d -s whymighta-instance && tmux send-keys -t whymighta-instance \"source /etc/profile.d/load_ssm_env.sh && .venv/bin/python ***.py\" C-m"]}' \
          --comment "Start bot in tmux"

          